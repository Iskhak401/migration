# -- Application properties -- #

# Server port
server.port=${PORT:8080}

# Server error
server.error.include-message=${SERVER_ERROR_INCLUDE_MESSAGE:always}

# Logging level
logging.level.org.springframework.batch=${BATCH_LOGGING_LEVEL:info}

# RDF
# Namespaces should end with a '/' or '#' as necessary
rdf4j.url=${RDF4J_URL:xxx}
rdf4j.username=${RDF4J_USERNAME:xxx}
rdf4j.password=${RDF4J_PASSWORD:xxx}
rdf4j.repository.name=${RDF4J_REPOSITORY_NAME:xxx}
rdf4j.caden.base.namespace=${RDF4J_CADEN_BASE_NAMESPACE:xxx}
rdf4j.caden.base.data.namespace=${RDF4J_CADEN_BASE_DATA_NAMESPACE:xxx}
rdf4j.caden.reference.namespace=${RDF4J_CADEN_REFERENCE_NAMESPACE:xxx}
rdf4j.caden.reference.data.namespace=${RDF4J_CADEN_REFERENCE_DATA_NAMESPACE:xxx}
rdf4j.schema.namespace=${RDF4J_SCHEMA_NAMESPACE:xxx}
rdf4j.owl.namespace=${RDF4J_OWL_NAMESPACE:xxx}

# Database configuration
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:${DATABASE_CONNECTION:postgresql}://${DATABASE_HOST:localhost}:${DATABASE_PORT:5432}/${DATABASE_NAME:database}
spring.datasource.username=${DATABASE_USERNAME:username}
spring.datasource.password=${DATABASE_PASSWORD:password}
spring.datasource.hikari.maximum-pool-size=${DATABASE_MAXIMUM_POOL_SIZE:30}

# Batch
# spring.batch.jdbc.initialize-schema=always
# spring.batch.job.enabled=false

# AWS credentials
aws.access.key.id=${AWS_ACCESS_KEY_ID:xxx}
aws.secret.access.key=${AWS_SECRET_ACCESS_KEY:xxx}

# AWS S3
aws.s3.region=${AWS_S3_REGION:us-east-1}
aws.s3.bucket.name=${AWS_BUCKET_NAME:caden-vault-dev}

# AWS SQS
aws.sqs.region=${AWS_SQS_REGION:us-east-1}
aws.sqs.megraph.transformations=${AWS_MEGRAPH_TRANSFORMATIONS_QUEUE_URL:https://sqs.us-east-1.amazonaws.com/089301482168/beta-megraph-transformations.fifo}
aws.sqs.spotify.transformations=${AWS_SPOTIFY_TRANSFORMATIONS_QUEUE_URL:https://sqs.us-east-1.amazonaws.com/089301482168/beta-spotify-transformations.fifo}
aws.sqs.amazon.transformations=${AWS_AMAZON_TRANSFORMATIONS_QUEUE_URL:https://sqs.us-east-1.amazonaws.com/089301482168/beta-amazon-transformations.fifo}
aws.sqs.airbnb.transformations=${AWS_AIRBNB_TRANSFORMATIONS_QUEUE_URL:https://sqs.us-east-1.amazonaws.com/089301482168/beta-airbnb-transformations.fifo}
aws.sqs.netflix.transformations=${AWS_NETFLIX_TRANSFORMATIONS_QUEUE_URL:https://sqs.us-east-1.amazonaws.com/089301482168/beta-netflix-scraper-transformations.fifo}
aws.sqs.uber.transformations=${AWS_UBER_TRANSFORMATIONS_QUEUE_URL:https://sqs.us-east-1.amazonaws.com/089301482168/beta-uber-transformations.fifo}
aws.sqs.mx.transformations=${AWS_MX_TRANSFORMATIONS_QUEUE_URL:https://sqs.us-east-1.amazonaws.com/089301482168/beta-mx-transformations.fifo}
aws.sqs.ahk.transformations=${AWS_AHK_TRANSFORMATIONS_QUEUE_URL:https://sqs.us-east-1.amazonaws.com/089301482168/beta-apple-health-kit-transformations.fifo}
aws.sqs.location.transformations=${AWS_LOCATION_TRANSFORMATIONS_QUEUE_URL:https://sqs.us-east-1.amazonaws.com/089301482168/beta-location-transformations.fifo}

# Netflix
netflix.url=${NETFLIX_URL:https://www.netflix.com/}

# Uber
uber.permitted.taxes=${UBER_PERMITTED_TAXES:Sales Tax,NY State Black Car Fund}
uber.benefits=${UBER_BENEFITS:Membership Benefit,Promotion}

# Airbnb
airbnb.url=${AIRBNB_URL:https://www.airbnb.com/}

# Amazon
amazon.url=${AMAZON_URL:https://www.amazon.com/}
# Rainforest
rainforest.api.url=${RAINFOREST_API_URL:xxx}
rainforest.api.key=${RAINFOREST_API_KEY:xxx}

# Sentry
sentry.dsn=${SENTRY_DSN:}
sentry.traces-sample-rate=${SENTRY_TRACES_SAMPLE_RATE:1.0}
sentry.logging.minimum-event-level=${SENTRY_LOGGING_MINIMUM_EVENT_LEVEL:error}
sentry.logging.minimum-breadcrumb-level=${SENTRY_LOGGING_MINIMUM_BREADCRUMB_LEVEL:debug}
sentry.environment=${SENTRY_ENVIRONMENT:dev}
sentry.ignored-exceptions-for-type=${SENTRY_IGNORED_EXCEPTIONS_FOR_TYPE:java.lang.Exception}

# Actuator
management.health.db.enabled=false

# Graph batch size
mx.transactions.batch.size=20000
location.transactions.batch.size=20000
netflix.transactions.batch.size=10000
orders.transactions.batch.size=10000

